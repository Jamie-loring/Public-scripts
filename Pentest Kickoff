#!/bin/bash

# Interactive Pentest Kickoff Script
# Automates the first steps of any engagement

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${GREEN}[+]${NC} $1"; }
log_warn() { echo -e "${YELLOW}[!]${NC} $1"; }
log_error() { echo -e "${RED}[-]${NC} $1"; }
log_question() { echo -e "${BLUE}[?]${NC} $1"; }

clear

cat << "EOF"
╔═══════════════════════════════════════════════════════════════════════════╗
║                    PENTEST KICKOFF - INITIAL RECON                        ║
║                  Let's get this engagement started right                  ║
╚═══════════════════════════════════════════════════════════════════════════╝

EOF

# ============================================
# STEP 1: Get Target IP
# ============================================
echo ""
log_question "Enter target IP address (or press Enter to skip all):"
read -p "> " target

if [ -z "$target" ]; then
    log_warn "No target provided. Exiting."
    exit 0
fi

log_info "Target set to: $target"

# Create engagement directory
ENGAGEMENT_DIR=~/engagements/$(date +%Y%m%d)_$target
mkdir -p $ENGAGEMENT_DIR/{nmap,ferox,loot,notes}
cd $ENGAGEMENT_DIR

log_info "Created engagement directory: $ENGAGEMENT_DIR"

# ============================================
# STEP 2: Nmap Scan
# ============================================
echo ""
log_question "Run nmap scan on top 1000 ports? (Y/n)"
read -p "> " run_nmap

if [[ "$run_nmap" != "n" && "$run_nmap" != "N" ]]; then
    log_info "Starting nmap scan (this may take a few minutes)..."
    
    # Run nmap with common flags
    nmap -sC -sV -oA nmap/initial_scan $target 2>/dev/null
    
    if [ $? -eq 0 ]; then
        log_info "Nmap scan complete!"
        log_info "Results saved to: $ENGAGEMENT_DIR/nmap/initial_scan.*"
        
        # Quick summary
        echo ""
        log_info "Open ports found:"
        grep "^[0-9]" nmap/initial_scan.nmap | grep "open" || log_warn "No open ports found or parsing failed"
    else
        log_error "Nmap scan failed"
    fi
else
    log_warn "Skipping nmap scan"
fi

# ============================================
# STEP 3: /etc/hosts Entry
# ============================================
echo ""
log_question "Add hostname to /etc/hosts? (Enter hostname or press Enter to skip)"
read -p "> " hostname

if [ ! -z "$hostname" ]; then
    # Check if entry already exists
    if grep -q "$target.*$hostname" /etc/hosts; then
        log_warn "Entry already exists in /etc/hosts"
    else
        echo "$target $hostname" | sudo tee -a /etc/hosts > /dev/null
        log_info "Added '$target $hostname' to /etc/hosts"
    fi
else
    log_warn "Skipping /etc/hosts entry"
fi

# ============================================
# STEP 4: Feroxbuster Web Scan
# ============================================
echo ""
log_question "Run feroxbuster for web enumeration? (y/N)"
read -p "> " run_ferox

if [[ "$run_ferox" == "y" || "$run_ferox" == "Y" ]]; then
    
    # Get protocol
    log_question "Protocol? (http/https) [default: http]"
    read -p "> " web_proto
    web_proto=${web_proto:-http}
    
    # Get port
    log_question "Port? [default: 80 for http, 443 for https]"
    read -p "> " web_port
    if [ -z "$web_port" ]; then
        if [ "$web_proto" == "https" ]; then
            web_port=443
        else
            web_port=80
        fi
    fi
    
    # Construct URL
    if [ ! -z "$hostname" ]; then
        target_url="${web_proto}://${hostname}:${web_port}"
    else
        target_url="${web_proto}://${target}:${web_port}"
    fi
    
    log_info "Starting feroxbuster on $target_url"
    log_warn "This will run in the background. Output: $ENGAGEMENT_DIR/ferox/scan.txt"
    
    # Check if feroxbuster exists
    if command -v feroxbuster &> /dev/null; then
        # Run feroxbuster in background
        nohup feroxbuster \
            -u $target_url \
            -w ~/tools/wordlists/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt \
            -o ferox/scan.txt \
            -t 50 \
            --auto-bail \
            > ferox/ferox.log 2>&1 &
        
        FEROX_PID=$!
        log_info "Feroxbuster started with PID: $FEROX_PID"
        log_info "To monitor: tail -f $ENGAGEMENT_DIR/ferox/scan.txt"
        log_info "To kill: kill $FEROX_PID"
    else
        log_error "feroxbuster not found. Install with: cargo install feroxbuster"
    fi
else
    log_warn "Skipping feroxbuster scan"
fi

# ============================================
# Summary
# ============================================
echo ""
echo "╔═══════════════════════════════════════════════════════════════════════════╗"
echo "║                           KICKOFF COMPLETE                                ║"
echo "╚═══════════════════════════════════════════════════════════════════════════╝"
echo ""
log_info "Engagement directory: $ENGAGEMENT_DIR"
log_info "Target: $target"
[ ! -z "$hostname" ] && log_info "Hostname: $hostname"
echo ""
log_info "Next steps:"
echo "  - cd $ENGAGEMENT_DIR"
echo "  - Review nmap results: cat nmap/initial_scan.nmap"
if [[ "$run_ferox" == "y" || "$run_ferox" == "Y" ]]; then
    echo "  - Monitor feroxbuster: tail -f ferox/scan.txt"
fi
echo "  - Start manual enumeration and document in notes/"
echo ""
log_info "Happy hacking!"
